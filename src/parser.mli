type token =
  | ENV of (Error.info)
  | REPLY of (Error.info)
  | TO of (Error.info)
  | NEW of (Error.info)
  | LET of (Error.info)
  | ONCE of (Error.info)
  | ON of (Error.info)
  | IN of (Error.info)
  | NIL of (Error.info)
  | TKELL of (Error.info)
  | TINT of (Error.info)
  | TSTRING of (Error.info)
  | TPROC of (Error.info)
  | TUNIT of (Error.info)
  | TBOOL of (Error.info)
  | TLIST of (Error.info)
  | TVMID of (Error.info)
  | IF of (Error.info)
  | THEN of (Error.info)
  | ELSE of (Error.info)
  | TRUE of (Error.info)
  | FALSE of (Error.info)
  | UP of (Error.info)
  | DOWN of (Error.info)
  | VM of (Error.info)
  | NOT of (Error.info)
  | AND of (Error.info)
  | OR of (Error.info)
  | MARSHALL of (Error.info)
  | UNMARSHALL of (Error.info)
  | AS of (Error.info)
  | EMPTYLIST of (Error.info)
  | CONS of (Error.info)
  | HEAD of (Error.info)
  | TAIL of (Error.info)
  | ISNIL of (Error.info)
  | DOT of (Error.info)
  | COL of (Error.info)
  | SCOL of (Error.info)
  | PAR of (Error.info)
  | COM of (Error.info)
  | VNIL of (Error.info)
  | PLUS of (Error.info)
  | MINUS of (Error.info)
  | MULT of (Error.info)
  | DIV of (Error.info)
  | EQ of (Error.info)
  | CONC of (Error.info)
  | LPAREN of (Error.info)
  | RPAREN of (Error.info)
  | LKELL of (Error.info)
  | RKELL of (Error.info)
  | LMSG of (Error.info)
  | RMSG of (Error.info)
  | LBR of (Error.info)
  | RBR of (Error.info)
  | APPLY of (Error.info)
  | EOF of (Error.info)
  | INT of (int Error.withinfo)
  | STRING of (string Error.withinfo)
  | NAME of (string Error.withinfo)
  | UNAME of (string Error.withinfo)

val main :
  (Lexing.lexbuf  -> token) -> Lexing.lexbuf -> Syntax.t Error.withinfo
